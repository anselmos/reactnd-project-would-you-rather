{"version":3,"sources":["auth/auth.action.js","components/NavigationHeader.js","questions/questions.types.js","questions/questions.action.js","style/sarah.jpg","style/john.jpg","api/_DATA.js","style/tyler.jpg","users/users.types.js","users/users.action.js","questions/NewQuestion.js","api/api.types.js","api/api.action.js","components/Login.js","components/QuestionVote.js","users/user.utils.js","components/Home.js","components/Leaderboard.js","components/NoMatch.js","components/QuestionById.js","components/App.js","reportWebVitals.js","store.js","users/users.reducer.js","reducers/loading.reducer.js","questions/questions.reducer.js","auth/auth.reducer.js","logger.middleware.js","index.js"],"names":["SET_AUTH_USER","setAuthUserAction","user","type","withRouter","connect","auth_user","history","dispatch","AppBar","color","position","Toolbar","Typography","variant","Button","onClick","push","bind","this","Avatar","src","avatarURL","alt","name","ADD_QUESTION","VOTE_QUESTION","addQuestionAction","question","users","sarahedo","id","sarah","answers","am8ehyc8byjqgar0jgpub9","loxhs1bqm25b708cmbf3g","questions","tylermcginnis","vthrdm985a262al8qx3do","xj352vofupe1dqz9emx13r","johndoe","john","author","timestamp","optionOne","votes","text","optionTwo","_getUsers","Promise","res","rej","setTimeout","_getQuestions","formatQuestion","optionOneText","optionTwoText","Math","random","toString","substring","Date","now","VOTE_USER","QUESTION_USER","newQuestionUser","NewQuestion","addItem","e","preventDefault","option1","value","option2","props","Paper","className","Grid","Input","placeholder","ref","input","React","Component","RECEIVE_DATA","receiveDataAction","path_no_login","useHistory","handleLoginBtn","selectedUser","renderQuestions","data","Object","keys","map","key","voteCallback","user_voted","includes","userAvatarUrl","width","height","number_of_votes_for_user_option","percentage_of_votes_for_user_option","length","round","TableRow","TableCell","style","backgroundColor","isLogged","sort_questions","a_value","voteCallbackFunction","vote","voteOnQuestionAction","voteUserAction","useState","answeredToggle","toggleAnswered","new_questions","fromEntries","entries","filter","v","sort","Table","TableHead","TableBody","sort_questions_answeres_count","b_value","users_data","NoMatch","location","useLocation","pathname","questionid","useParams","undefined","getOrUpdateUserData","a","App","state","call","path","setState","unlisten","listen","action","loading","render","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","combineReducers","userVoted","assign","userQuestion","concat","copyData","voteDataQuestion","window","__REDUX_DEVTOOLS_EXTENSION__","process","applyMiddleware","next","console","group","log","result","getState","groupEnd","ReactDOM","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.79a4fade.chunk.js","sourcesContent":["export const SET_AUTH_USER = \"AUTH_USER\";\n\nexport function setAuthUserAction(user) {\n  return {\n    type: SET_AUTH_USER,\n    user,\n  };\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport { setAuthUserAction } from \"../auth/auth.action\";\nimport { AppBar, Button, Toolbar, Typography } from \"@material-ui/core\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nfunction NavigationHeader({ auth_user, history, dispatch }) {\n  const handleHome = (history) => {\n    history.push(\"/\");\n  };\n  const handleNewQuestion = (history) => {\n    history.push(\"/add\");\n  };\n  const handleLeaderBoard = (history) => {\n    history.push(\"/leaderboard\");\n  };\n  const handleLogoutBtn = (history) => {\n    dispatch(setAuthUserAction(null));\n    history.push(\"/logout\");\n  };\n  const handleLoginBtn = (history) => {\n    history.push(\"/login\");\n  };\n  return (\n    <AppBar color=\"inherit\" position=\"static\">\n      <Toolbar>\n        <Typography variant=\"h6\">Would you rather ... ?</Typography>\n        <Button color=\"primary\" onClick={handleHome.bind(this, history)}>\n          Home\n        </Button>\n        <Button color=\"primary\" onClick={handleNewQuestion.bind(this, history)}>\n          New Question\n        </Button>\n        <Button color=\"primary\" onClick={handleLeaderBoard.bind(this, history)}>\n          Leader Board\n        </Button>\n        {auth_user ? (\n          <div>\n            <Avatar src={auth_user.avatarURL} alt={auth_user.name} />\n            {auth_user.name}\n            <Button\n              color=\"primary\"\n              onClick={handleLogoutBtn.bind(this, history)}\n            >\n              Logout\n            </Button>\n          </div>\n        ) : (\n          <Button color=\"primary\" onClick={handleLoginBtn.bind(this, history)}>\n            Login\n          </Button>\n        )}\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nNavigationHeader.propTypes = {\n  auth_user: PropTypes.object,\n  history: PropTypes.object,\n  dispatch: PropTypes.func,\n};\nfunction mapStateToProps({ auth_user }) {\n  return {\n    auth_user: auth_user,\n  };\n}\nexport default withRouter(connect(mapStateToProps)(NavigationHeader));\n","export const ADD_QUESTION = \"ADD_QUESTION\";\nexport const VOTE_QUESTION = \"VOTE_QUESTION\";\n","import { ADD_QUESTION, VOTE_QUESTION } from \"./questions.types\";\n\nexport function addQuestionAction(question) {\n  return {\n    type: ADD_QUESTION,\n    question,\n  };\n}\n\nexport function voteOnQuestionAction(user, vote, question) {\n  return {\n    type: VOTE_QUESTION,\n    user,\n    vote,\n    question,\n  };\n}\n","export default __webpack_public_path__ + \"static/media/sarah.54c90b0e.jpg\";","export default __webpack_public_path__ + \"static/media/john.908d1a61.jpg\";","import sarah from \"../style/sarah.jpg\";\nimport john from \"../style/john.jpg\";\nimport tyler from \"../style/tyler.jpg\";\nlet users = {\n  sarahedo: {\n    id: \"sarahedo\",\n    name: \"Sarah Edo\",\n    avatarURL: sarah,\n    answers: {\n      \"8xf0y6ziyjabvozdd253nd\": \"optionOne\",\n      \"6ni6ok3ym7mf1p33lnez\": \"optionTwo\",\n      am8ehyc8byjqgar0jgpub9: \"optionTwo\",\n      loxhs1bqm25b708cmbf3g: \"optionTwo\",\n    },\n    questions: [\"8xf0y6ziyjabvozdd253nd\", \"am8ehyc8byjqgar0jgpub9\"],\n  },\n  tylermcginnis: {\n    id: \"tylermcginnis\",\n    name: \"Tyler McGinnis\",\n    avatarURL: tyler,\n    answers: {\n      vthrdm985a262al8qx3do: \"optionOne\",\n      xj352vofupe1dqz9emx13r: \"optionTwo\",\n    },\n    questions: [\"loxhs1bqm25b708cmbf3g\", \"vthrdm985a262al8qx3do\"],\n  },\n  johndoe: {\n    id: \"johndoe\",\n    name: \"John Doe\",\n    avatarURL: john,\n    answers: {\n      xj352vofupe1dqz9emx13r: \"optionOne\",\n      vthrdm985a262al8qx3do: \"optionTwo\",\n      \"6ni6ok3ym7mf1p33lnez\": \"optionTwo\",\n    },\n    questions: [\"6ni6ok3ym7mf1p33lnez\", \"xj352vofupe1dqz9emx13r\"],\n  },\n};\n\nlet questions = {\n  \"8xf0y6ziyjabvozdd253nd\": {\n    id: \"8xf0y6ziyjabvozdd253nd\",\n    author: \"sarahedo\",\n    timestamp: 1467166872634,\n    optionOne: {\n      votes: [\"sarahedo\"],\n      text: \"have horrible short term memory\",\n    },\n    optionTwo: {\n      votes: [],\n      text: \"have horrible long term memory\",\n    },\n  },\n  \"6ni6ok3ym7mf1p33lnez\": {\n    id: \"6ni6ok3ym7mf1p33lnez\",\n    author: \"johndoe\",\n    timestamp: 1468479767190,\n    optionOne: {\n      votes: [],\n      text: \"become a superhero\",\n    },\n    optionTwo: {\n      votes: [\"johndoe\", \"sarahedo\"],\n      text: \"become a supervillain\",\n    },\n  },\n  am8ehyc8byjqgar0jgpub9: {\n    id: \"am8ehyc8byjqgar0jgpub9\",\n    author: \"sarahedo\",\n    timestamp: 1488579767190,\n    optionOne: {\n      votes: [],\n      text: \"be telekinetic\",\n    },\n    optionTwo: {\n      votes: [\"sarahedo\"],\n      text: \"be telepathic\",\n    },\n  },\n  loxhs1bqm25b708cmbf3g: {\n    id: \"loxhs1bqm25b708cmbf3g\",\n    author: \"tylermcginnis\",\n    timestamp: 1482579767190,\n    optionOne: {\n      votes: [],\n      text: \"be a front-end developer\",\n    },\n    optionTwo: {\n      votes: [\"sarahedo\"],\n      text: \"be a back-end developer\",\n    },\n  },\n  vthrdm985a262al8qx3do: {\n    id: \"vthrdm985a262al8qx3do\",\n    author: \"tylermcginnis\",\n    timestamp: 1489579767190,\n    optionOne: {\n      votes: [\"tylermcginnis\"],\n      text: \"find $50 yourself\",\n    },\n    optionTwo: {\n      votes: [\"johndoe\"],\n      text: \"have your best friend find $500\",\n    },\n  },\n  xj352vofupe1dqz9emx13r: {\n    id: \"xj352vofupe1dqz9emx13r\",\n    author: \"johndoe\",\n    timestamp: 1493579767190,\n    optionOne: {\n      votes: [\"johndoe\"],\n      text: \"write JavaScript\",\n    },\n    optionTwo: {\n      votes: [\"tylermcginnis\"],\n      text: \"write Swift\",\n    },\n  },\n};\n\nfunction generateUID() {\n  return (\n    Math.random().toString(36).substring(2, 15) +\n    Math.random().toString(36).substring(2, 15)\n  );\n}\n\nexport function _getUsers() {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({ ...users }), 1000);\n  });\n}\n\nexport function _getQuestions() {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({ ...questions }), 1000);\n  });\n}\n\nexport function formatQuestion({ optionOneText, optionTwoText, author }) {\n  return {\n    id: generateUID(),\n    timestamp: Date.now(),\n    author,\n    optionOne: {\n      votes: [],\n      text: optionOneText,\n    },\n    optionTwo: {\n      votes: [],\n      text: optionTwoText,\n    },\n  };\n}\n\nexport function _saveQuestion(question) {\n  return new Promise((res, rej) => {\n    const authedUser = question.author;\n    const formattedQuestion = formatQuestion(question);\n\n    setTimeout(() => {\n      questions = {\n        ...questions,\n        [formattedQuestion.id]: formattedQuestion,\n      };\n\n      users = {\n        ...users,\n        [authedUser]: {\n          ...users[authedUser],\n          questions: users[authedUser].questions.concat([formattedQuestion.id]),\n        },\n      };\n\n      res(formattedQuestion);\n    }, 1000);\n  });\n}\n\nexport function _saveQuestionAnswer({ authedUser, qid, answer }) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      users = {\n        ...users,\n        [authedUser]: {\n          ...users[authedUser],\n          answers: {\n            ...users[authedUser].answers,\n            [qid]: answer,\n          },\n        },\n      };\n\n      questions = {\n        ...questions,\n        [qid]: {\n          ...questions[qid],\n          [answer]: {\n            ...questions[qid][answer],\n            votes: questions[qid][answer].votes.concat([authedUser]),\n          },\n        },\n      };\n\n      res();\n    }, 500);\n  });\n}\n","export default __webpack_public_path__ + \"static/media/tyler.e97a69c8.jpg\";","export const VOTE_USER = \"VOTE_USER\";\nexport const QUESTION_USER = \"QUESTION_USER\";\n","import { QUESTION_USER, VOTE_USER } from \"./users.types\";\n\nexport function voteUserAction(user, vote, question) {\n  return {\n    type: VOTE_USER,\n    user,\n    vote,\n    question,\n  };\n}\nexport function newQuestionUser(user, question) {\n  return {\n    type: QUESTION_USER,\n    user,\n    question,\n  };\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { addQuestionAction } from \"./questions.action\";\nimport { formatQuestion } from \"../api/_DATA\";\nimport { newQuestionUser } from \"../users/users.action\";\nimport { connect } from \"react-redux\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Input from \"@material-ui/core/Input\";\nimport Button from \"@material-ui/core/Button\";\n\nclass NewQuestion extends React.Component {\n  addItem = (e) => {\n    e.preventDefault();\n    const option1 = this.option1.value;\n    this.option1.value = \"\";\n    const option2 = this.option2.value;\n    this.option2.value = \"\";\n    const question = formatQuestion({\n      optionOneText: option1,\n      optionTwoText: option2,\n      author: this.props.auth_user.id,\n    });\n    this.props.dispatch(addQuestionAction(question));\n    this.props.dispatch(newQuestionUser(this.props.auth_user, question));\n  };\n\n  render() {\n    if (this.props.auth_user === null) {\n      return <div>Please log in!</div>;\n    }\n    return (\n      <div>\n        <Paper className=\"new-question-title\">Create New Question</Paper>\n        <Grid>\n          <Paper className=\"new-question-would-you-rather\">\n            Would you rather ...\n          </Paper>\n          <Input\n            type=\"text\"\n            placeholder=\"Enter option one text here\"\n            ref={(input) => (this.option1 = input)}\n          />\n          <Paper className=\"new-question-or\">OR</Paper>\n          <Input\n            type=\"text\"\n            placeholder=\"Enter option two text here\"\n            ref={(input) => (this.option2 = input)}\n          />\n        </Grid>\n        <Button className=\"new-question-submit\" onClick={this.addItem}>\n          Submit\n        </Button>\n      </div>\n    );\n  }\n}\n\nNewQuestion.propTypes = {\n  dispatch: PropTypes.func,\n  auth_user: PropTypes.object,\n};\nfunction mapStateToProps({ auth_user }) {\n  return {\n    auth_user: auth_user,\n  };\n}\nexport default connect(mapStateToProps)(NewQuestion);\n","const RECEIVE_DATA = \"RECEIVE_DATA\";\n\nexport default RECEIVE_DATA;\n","import RECEIVE_DATA from \"./api.types\";\n\nexport function receiveDataAction(users, questions) {\n  return {\n    type: RECEIVE_DATA,\n    users,\n    questions,\n  };\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { setAuthUserAction } from \"../auth/auth.action\";\nimport Button from \"@material-ui/core/Button\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nfunction Login({ path_no_login, users, dispatch }) {\n  let history = useHistory();\n  const handleLoginBtn = (selectedUser) => {\n    dispatch(setAuthUserAction(selectedUser));\n    history.push(path_no_login ? path_no_login : \"/\");\n  };\n  let renderQuestions = null;\n  if (users !== null) {\n    const data = Object.keys(users).map((key) => (\n      <div key={key}>\n        <Button onClick={handleLoginBtn.bind(this, users[key])}>\n          Login as {users[key].name}\n          <Avatar src={users[key].avatarURL} alt={users[key].name} />\n        </Button>\n      </div>\n    ));\n    renderQuestions = (\n      <div>\n        <h1>Users:</h1>\n        {data}\n      </div>\n    );\n  }\n  return <div>{renderQuestions}</div>;\n}\n\nLogin.propTypes = {\n  users: PropTypes.object,\n  questions: PropTypes.object,\n  auth_user: PropTypes.object,\n};\nfunction mapStateToProps({ users, questions, auth_user }) {\n  return {\n    users: users,\n    questions: questions,\n    auth_user: auth_user,\n  };\n}\nexport default connect(mapStateToProps)(Login);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Button from \"@material-ui/core/Button\";\n\nexport const OPTION_ONE = 1;\nexport const OPTION_TWO = 2;\nfunction QuestionVote({ users, question, user, voteCallback, dispatch }) {\n  let history = useHistory();\n\n  const user_voted = question.optionOne.votes.includes(user.id)\n    ? question.optionOne\n    : question.optionTwo.votes.includes(user.id)\n    ? question.optionTwo\n    : null;\n  const userAvatarUrl = (\n    <div>\n      <img\n        src={users[question.author].avatarURL}\n        width=\"100\"\n        height=\"100\"\n        alt={users[question.author].name}\n      />\n    </div>\n  );\n  let number_of_votes_for_user_option = 0;\n  let percentage_of_votes_for_user_option = 0;\n  if (user_voted !== null) {\n    number_of_votes_for_user_option = user_voted.votes.length;\n    percentage_of_votes_for_user_option =\n      Math.round(\n        ((user_voted.votes.length /\n          (question.optionOne.votes.length + question.optionTwo.votes.length)) *\n          100 *\n          10) /\n          10\n      ).toString() + \"%\";\n  }\n  return (\n    <TableRow key={question.id}>\n      <TableCell>\n        <Button\n          color=\"primary\"\n          onClick={() => {\n            history.push(\"/questions/\" + question.id);\n          }}\n        >\n          {question.id}\n        </Button>\n      </TableCell>\n      <TableCell>{userAvatarUrl}</TableCell>\n      <TableCell\n        style={{\n          backgroundColor:\n            user_voted !== null\n              ? user_voted === question.optionOne\n                ? \"green\"\n                : \"\"\n              : \"\",\n        }}\n      >\n        {question.optionOne.text}\n        {user_voted ? (\n          \"\"\n        ) : (\n          <Button\n            color=\"secondary\"\n            onClick={voteCallback.bind(\n              this,\n              user,\n              OPTION_ONE,\n              question,\n              dispatch\n            )}\n          >\n            Vote{\" \"}\n          </Button>\n        )}\n      </TableCell>\n      <TableCell\n        style={{\n          backgroundColor:\n            user_voted !== null\n              ? user_voted === question.optionTwo\n                ? \"green\"\n                : \"\"\n              : \"\",\n        }}\n      >\n        {question.optionTwo.text}\n        {user_voted ? (\n          \"\"\n        ) : (\n          <Button\n            color=\"secondary\"\n            onClick={voteCallback.bind(\n              this,\n              user,\n              OPTION_TWO,\n              question,\n              dispatch\n            )}\n          >\n            Vote{\" \"}\n          </Button>\n        )}\n      </TableCell>\n      <TableCell>\n        {user_voted ? number_of_votes_for_user_option : \"N/A\"}\n      </TableCell>\n      <TableCell>\n        {user_voted ? percentage_of_votes_for_user_option : \"N/A\"}\n      </TableCell>\n    </TableRow>\n  );\n}\n\nQuestionVote.propTypes = {\n  question: PropTypes.object,\n  user: PropTypes.object,\n};\nexport default connect()(QuestionVote);\n","export function isLogged(user) {\n  return user && user.name;\n}\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport QuestionVote from \"./QuestionVote\";\nimport { voteOnQuestionAction } from \"../questions/questions.action\";\nimport { voteUserAction } from \"../users/users.action\";\nimport { isLogged } from \"../users/user.utils\";\nimport { connect } from \"react-redux\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nfunction sort_questions([a_key, a_value], [b_key, b_value]) {\n  return b_value.timestamp - a_value.timestamp;\n}\nexport function voteCallbackFunction(user, vote, question, dispatch) {\n  dispatch(voteOnQuestionAction(user, vote, question));\n  dispatch(voteUserAction(user, vote, question));\n}\nfunction Home({ auth_user, users, questions }) {\n  const [answeredToggle, toggleAnswered] = useState(false);\n  if (!isLogged(auth_user)) {\n    return <div> Please log in!</div>;\n  }\n  let renderQuestions = null;\n  if (questions !== null) {\n    let new_questions = null;\n    if (answeredToggle) {\n      new_questions = Object.fromEntries(\n        Object.entries(questions).filter(\n          ([k, v]) =>\n            v.optionOne.votes.includes(auth_user.id) ||\n            v.optionTwo.votes.includes(auth_user.id)\n        )\n      );\n    } else {\n      new_questions = Object.fromEntries(\n        Object.entries(questions).filter(\n          ([k, v]) =>\n            !v.optionOne.votes.includes(auth_user.id) &&\n            !v.optionTwo.votes.includes(auth_user.id)\n        )\n      );\n    }\n    const data = Object.entries(new_questions)\n      .sort(sort_questions)\n      .map(([key, value]) => (\n        <QuestionVote\n          users={users}\n          key={key}\n          question={new_questions[key]}\n          user={auth_user}\n          voteCallback={voteCallbackFunction}\n        />\n      ));\n    renderQuestions = (\n      <div>\n        <h1>Questions {answeredToggle ? \"answered\" : \"unanswered\"}:</h1>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Question Id</TableCell>\n              <TableCell>Pic. of question creator.</TableCell>\n              <TableCell>Option One</TableCell>\n              <TableCell>Option Two</TableCell>\n              <TableCell>Nb of people Voted on user Option:</TableCell>\n              <TableCell>Percentage of people Voted on user Option:</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>{data}</TableBody>\n        </Table>\n      </div>\n    );\n  }\n  return (\n    <div>\n      Show answered ?{\" \"}\n      <input type=\"checkbox\" onClick={() => toggleAnswered(!answeredToggle)} />\n      {renderQuestions}\n    </div>\n  );\n}\n\nHome.propTypes = {\n  user: PropTypes.object,\n  users: PropTypes.object,\n  questions: PropTypes.object,\n  answeredToggle: PropTypes.bool,\n  answeredToggleCallback: PropTypes.func,\n};\n\nfunction mapStateToProps({ users, questions, auth_user }) {\n  return {\n    users: users,\n    questions: questions,\n    auth_user: auth_user,\n  };\n}\nexport default connect(mapStateToProps)(Home);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\n// to reverse the sort you would need to move a_value first : a_value - b_value\nfunction sort_questions_answeres_count([a_key, a_value], [b_key, b_value]) {\n  return (\n    Object.keys(b_value.answers).length +\n    Object.keys(b_value.questions).length -\n    (Object.keys(a_value.answers).length +\n      Object.keys(a_value.questions).length)\n  );\n}\nfunction Leaderboard({ auth_user, users }) {\n  if (auth_user === null) {\n    return <div> Please log in!</div>;\n  }\n  const users_data = Object.entries(users)\n    .sort(sort_questions_answeres_count)\n    .map(([key, value]) => (\n      <TableRow key={key}>\n        <TableCell>{value.name}</TableCell>\n        <TableCell>\n          <img\n            src={value.avatarURL}\n            width=\"100\"\n            height=\"100\"\n            alt={value.name}\n          />\n        </TableCell>\n        <TableCell>{Object.keys(value.questions).length}</TableCell>\n        <TableCell>{Object.keys(value.answers).length}</TableCell>\n      </TableRow>\n    ));\n\n  return (\n    <div>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>User name</TableCell>\n            <TableCell>User Picture</TableCell>\n            <TableCell>Nb of questions asked</TableCell>\n            <TableCell>Nb of questions answered</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>{users_data}</TableBody>\n      </Table>\n    </div>\n  );\n}\n\nLeaderboard.propTypes = {\n  auth_user: PropTypes.object,\n  users: PropTypes.object,\n};\nfunction mapStateToProps({ users, auth_user }) {\n  return {\n    auth_user: auth_user,\n    users: users,\n  };\n}\nexport default connect(mapStateToProps)(Leaderboard);\n","import React from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function NoMatch() {\n  let location = useLocation();\n\n  return (\n    <div>\n      <h3>\n        404 - page <code>{location.pathname} not found!</code>\n      </h3>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { isLogged } from \"../users/user.utils\";\nimport NoMatch from \"./NoMatch\";\nimport QuestionVote from \"./QuestionVote\";\nimport { voteCallbackFunction } from \"./Home\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Table from \"@material-ui/core/Table\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableHead from \"@material-ui/core/TableHead\";\n\nfunction QuestionById({ auth_user, users, questions }) {\n  let { questionid } = useParams();\n  if (!isLogged(auth_user)) {\n    return <div> Please log in!</div>;\n  }\n  const question = questions[questionid];\n  if (question === null || question === undefined) {\n    return <NoMatch />;\n  }\n  return (\n    <Table>\n      <TableHead>\n        <TableRow>\n          <TableCell>Question Id</TableCell>\n          <TableCell>Pic. of question creator.</TableCell>\n          <TableCell>Option One</TableCell>\n          <TableCell>Option Two</TableCell>\n          <TableCell>Nb of people Voted on user Option:</TableCell>\n          <TableCell>Percentage of people Voted on user Option:</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        <QuestionVote\n          users={users}\n          question={question}\n          user={auth_user}\n          voteCallback={voteCallbackFunction}\n        />\n      </TableBody>\n    </Table>\n  );\n}\nQuestionById.propTypes = {\n  user: PropTypes.object,\n  users: PropTypes.object,\n  questions: PropTypes.object,\n};\nfunction mapStateToProps({ users, questions, auth_user }) {\n  return {\n    users: users,\n    questions: questions,\n    auth_user: auth_user,\n  };\n}\nexport default connect(mapStateToProps)(QuestionById);\n","import React from \"react\";\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport \"./App.css\";\nimport \"../style/spacer.css\";\nimport NavigationHeader from \"./NavigationHeader\";\nimport NewQuestion from \"../questions/NewQuestion\";\nimport { _getQuestions, _getUsers } from \"../api/_DATA\";\nimport { receiveDataAction } from \"../api/api.action\";\nimport Login from \"./Login\";\nimport Home from \"./Home\";\nimport Leaderboard from \"./Leaderboard\";\nimport { isLogged } from \"../users/user.utils\";\nimport NoMatch from \"./NoMatch\";\nimport QuestionById from \"./QuestionById\";\nimport { connect } from \"react-redux\";\n\nasync function getOrUpdateUserData() {\n  const users = await _getUsers();\n  const questions = await _getQuestions();\n  this.props.dispatch(receiveDataAction(users, questions));\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      path_no_login: null,\n    };\n  }\n\n  componentDidMount() {\n    getOrUpdateUserData.call(this);\n    const path = this.props.history.location.pathname;\n    if (\n      path !== \"/login\" &&\n      path !== \"/logout\" &&\n      !isLogged(this.props.auth_user)\n    ) {\n      this.setState({ path_no_login: path });\n    }\n    this.unlisten = this.props.history.listen((location, action) => {\n      const path = location.pathname;\n      if (\n        path !== \"/login\" &&\n        path !== \"/logout\" &&\n        !isLogged(this.props.auth_user)\n      ) {\n        this.setState({ path_no_login: path });\n      }\n    });\n  }\n  componentWillUnmount() {\n    this.unlisten();\n  }\n\n  render() {\n    if (this.props.loading === true) {\n      return <h3>Loading</h3>;\n    }\n    return (\n      <div className=\"App\">\n        <NavigationHeader />\n        <div className=\"spacer-header-body\" />\n        <Switch>\n          <Route path=\"/add\" render={() => <NewQuestion />} />\n          <Route path=\"/leaderboard\" render={() => <Leaderboard />} />\n          <Route\n            path=\"/logout\"\n            render={() => <div> Logged-out. Please log-in.</div>}\n          />\n          <Route\n            path=\"/login\"\n            render={() => <Login path_no_login={this.state.path_no_login} />}\n          />\n          <Route\n            path=\"/questions/:questionid\"\n            render={() => <QuestionById />}\n          />\n          <Route exact path=\"/\" render={() => <Home />} />\n          <Route path=\"*\">\n            <NoMatch />\n          </Route>\n        </Switch>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps({ users, loading, auth_user }) {\n  return {\n    loading: loading,\n    auth_user: auth_user,\n  };\n}\n\nexport default withRouter(connect(mapStateToProps)(App));\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport { users } from \"./users/users.reducer\";\nimport { loading } from \"./reducers/loading.reducer\";\nimport { logger } from \"./logger.middleware\";\nimport { questions } from \"./questions/questions.reducer\";\nimport { auth_user } from \"./auth/auth.reducer\";\n\nconst store = createStore(\n  combineReducers({\n    users,\n    loading,\n    questions,\n    auth_user,\n  }),\n  window.__REDUX_DEVTOOLS_EXTENSION__ &&\n    process.env.NODE_ENV === \"development\" &&\n    window.__REDUX_DEVTOOLS_EXTENSION__(),\n  applyMiddleware(logger)\n);\n\nexport default store;\n","import RECEIVE_DATA from \"../api/api.types\";\nimport { VOTE_USER, QUESTION_USER } from \"./users.types\";\nimport { OPTION_ONE, OPTION_TWO } from \"../components/QuestionVote\";\n\nexport function users(state = {}, action) {\n  switch (action.type) {\n    case RECEIVE_DATA:\n      return action.users;\n    case VOTE_USER:\n      let userVoted = { ...state };\n      // TODO check if this code can be refactored/reduced in some way\n      if (action.vote === OPTION_ONE) {\n        userVoted[action.user.id].answers = Object.assign(\n          userVoted[action.user.id].answers,\n          { [action.question.id]: \"optionOne\" }\n        );\n      }\n      if (action.vote === OPTION_TWO) {\n        userVoted[action.user.id].answers = Object.assign(\n          userVoted[action.user.id].answers,\n          { [action.question.id]: \"optionTwo\" }\n        );\n      }\n      return userVoted;\n    case QUESTION_USER:\n      let userQuestion = { ...state };\n      userQuestion[action.user.id].questions = userQuestion[\n        action.user.id\n      ].questions.concat(action.question.id);\n      return userQuestion;\n    default:\n      return state;\n  }\n}\n","import RECEIVE_DATA from \"../api/api.types\";\n\nexport function loading(state = true, action) {\n  switch (action.type) {\n    case RECEIVE_DATA:\n      return false;\n    default:\n      return state;\n  }\n}\n","import RECEIVE_DATA from \"../api/api.types\";\nimport { ADD_QUESTION, VOTE_QUESTION } from \"./questions.types\";\nimport { OPTION_ONE, OPTION_TWO } from \"../components/QuestionVote\";\n\nexport function questions(state = [], action) {\n  switch (action.type) {\n    case ADD_QUESTION:\n      let copyData = { ...state };\n      copyData[action.question.id] = action.question;\n      return copyData;\n    case VOTE_QUESTION:\n      let voteDataQuestion = { ...state };\n      if (action.vote === OPTION_ONE) {\n        voteDataQuestion[action.question.id].optionOne.votes = voteDataQuestion[\n          action.question.id\n        ].optionOne.votes.concat(action.user.id);\n      }\n      if (action.vote === OPTION_TWO) {\n        voteDataQuestion[action.question.id].optionTwo.votes = voteDataQuestion[\n          action.question.id\n        ].optionTwo.votes.concat(action.user.id);\n      }\n      return voteDataQuestion;\n    case RECEIVE_DATA:\n      return action.questions;\n    default:\n      return state;\n  }\n}\n","import { SET_AUTH_USER } from \"./auth.action\";\n\nexport function auth_user(state = null, action) {\n  switch (action.type) {\n    case SET_AUTH_USER:\n      return action.user;\n    default:\n      return state;\n  }\n}\n","export const logger = (store) => (next) => (action) => {\n  console.group(action.type);\n  console.log(\"The action: \", action);\n  const result = next(action);\n  console.log(\"The new state: \", store.getState());\n  console.groupEnd();\n  return result;\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./style/index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./store\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport { Provider } from \"react-redux\";\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}